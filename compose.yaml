services:
  db: 
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: changeme # don't do this
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    ports: 
      - 8080:8080
    networks:
      - backend

  api:
    restart: always
    build: .
    # make sure our DB is up and running before building
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3000:3000
    # need to play with this, let the app respawn when changed
    develop:
      watch:
        - action: sync
          path: .
          target: /code
    networks:
      - backend

# allow our backend apps to talk to each other
networks:
  backend:
    driver: bridge
